// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NZWalks.Data;

#nullable disable

namespace NZWalks.Migrations
{
    [DbContext(typeof(NZWalksDbContext))]
    [Migration("20250826065224_Seed initial data in regions and difficulty table")]
    partial class Seedinitialdatainregionsanddifficultytable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NZWalks.Models.Domain.Difficulty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Difficulties");

                    b.HasData(
                        new
                        {
                            Id = new Guid("28c8b650-dee4-44a1-a3a1-ddc90377faeb"),
                            Name = "Easy"
                        },
                        new
                        {
                            Id = new Guid("e70d9a02-eed6-435f-a9c9-300f70d6656a"),
                            Name = "Medium"
                        },
                        new
                        {
                            Id = new Guid("64662286-6321-45da-b36f-3def20384738"),
                            Name = "Hard"
                        });
                });

            modelBuilder.Entity("NZWalks.Models.Domain.Region", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegionImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Regions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9a60fca5-8c43-41c5-95e2-c00b69908230"),
                            Code = "NSN",
                            Name = "Nelson",
                            RegionImageURL = "https://images.pexels.com/photos/3396661/pexels-photo-3396661.jpeg"
                        },
                        new
                        {
                            Id = new Guid("7b3eb59b-ff49-4a74-97fe-2e03705b21e7"),
                            Code = "AKL",
                            Name = "Auckland",
                            RegionImageURL = "https://images.pexels.com/photos/33602901/pexels-photo-33602901.jpeg"
                        },
                        new
                        {
                            Id = new Guid("2e042307-2f33-4642-9321-ed3fc637bb4e"),
                            Code = "BOP",
                            Name = "Bay of Plenty"
                        },
                        new
                        {
                            Id = new Guid("e6e76066-9f9c-4514-8b18-21244bfaa6e6"),
                            Code = "NTL",
                            Name = "Northland"
                        },
                        new
                        {
                            Id = new Guid("152f4b1a-4f66-4d49-b375-d736854e4138"),
                            Code = "STL",
                            Name = "SouthLand"
                        },
                        new
                        {
                            Id = new Guid("511bc335-a23b-4cd2-bc3a-aefc03568811"),
                            Code = "WGN",
                            Name = "Wellington",
                            RegionImageURL = "https://images.pexels.com/photos/3709402/pexels-photo-3709402.jpeg"
                        });
                });

            modelBuilder.Entity("NZWalks.Models.Domain.Walk", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DifficultyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("LengthInKm")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RegionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WalkImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DifficultyId");

                    b.HasIndex("RegionId");

                    b.ToTable("Walks");
                });

            modelBuilder.Entity("NZWalks.Models.Domain.Walk", b =>
                {
                    b.HasOne("NZWalks.Models.Domain.Difficulty", "Difficulty")
                        .WithMany()
                        .HasForeignKey("DifficultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NZWalks.Models.Domain.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Difficulty");

                    b.Navigation("Region");
                });
#pragma warning restore 612, 618
        }
    }
}
